/*
 Navicat Premium Data Transfer

 Source Server         : mysql
 Source Server Type    : MySQL
 Source Server Version : 80029
 Source Host           : localhost:3306
 Source Schema         : ai-cloud-nacos

 Target Server Type    : MySQL
 Target Server Version : 80029
 File Encoding         : 65001

 Date: 25/05/2022 23:08:25
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `encrypted_data_key` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 56 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (1, 'application-dev.yml', 'DEFAULT_GROUP', 'spring:\r\n  autoconfigure:\r\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\r\n  mvc:\r\n    pathmatch:\r\n      matching-strategy: ant_path_matcher\r\n\r\n# feign 配置\r\nfeign:\r\n  sentinel:\r\n    enabled: true\r\n  okhttp:\r\n    enabled: true\r\n  httpclient:\r\n    enabled: false\r\n  client:\r\n    config:\r\n      default:\r\n        connectTimeout: 10000\r\n        readTimeout: 10000\r\n  compression:\r\n    request:\r\n      enabled: true\r\n    response:\r\n      enabled: true\r\n\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \'*\'', 'f2f5da21b634b755c10eb513568e0742', '2022-05-06 12:48:52', '2022-05-06 12:48:52', 'nacos', '127.0.0.1', '', '', '通用模块', 'null', 'null', 'yaml', 'null', '');
INSERT INTO `config_info` VALUES (2, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 用户中心\n        - id: cloud-user\n          uri: lb://cloud-user\n          predicates:\n            - Path=/user/**    \n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /cloud-auth/login\n  # 不校验白名单\n  ignore:\n    whites:\n      - /cloud-auth/logout\n      - /cloud-auth/login\n      - /cloud-auth/register\n      - /cloud-file/upload\n      - /*/v2/api-docs', 'fbb2bf27d67e5358e9aaf0d4661033c2', '2022-05-06 12:49:28', '2022-05-24 16:41:55', 'nacos', '127.0.0.1', '', '', '网关模块', 'null', 'null', 'yaml', 'null', '');
INSERT INTO `config_info` VALUES (3, 'cloud-auth-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: \n', '7dfc6aa08205ca863003cdbb53802b7d', '2022-05-06 12:51:01', '2022-05-24 16:42:10', 'nacos', '127.0.0.1', '', '', '认证中心', 'null', 'null', 'yaml', 'null', '');
INSERT INTO `config_info` VALUES (4, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername:\n        loginPassword:\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: root\n            password: 123456\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n            #seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      cloud-user-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      namespace:\n\n# MyBatis-Plus配置\nmybatis-plus:\n  # 搜索指定包别名\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title:\n  license:\n  licenseUrl:', '0b5b2422d394f89f07e209f4b084f652', '2022-05-10 01:25:33', '2022-05-25 14:53:17', 'nacos', '127.0.0.1', '', '', '用户中心', 'null', 'null', 'yaml', 'null', '');
INSERT INTO `config_info` VALUES (5, 'cloud-file-dev.yml', 'DEFAULT_GROUP', '# 本地文件上传    \nfile:\n  domain: http://127.0.0.1:8801\n  path: E:/ai-cloud/uploadPath\n  prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://192.168.2.11\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 192.168.2.11:22122\n\n# Minio配置\nminio:\n  url: http://192.168.2.11:9000\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test  ', '4da7a9bf910db3b780dd34e02291534b', '2022-05-12 14:27:58', '2022-05-24 16:42:52', 'nacos', '127.0.0.1', '', '', '文件服务', 'null', 'null', 'yaml', 'null', '');
INSERT INTO `config_info` VALUES (10, 'sentinel-cloud-gateway', 'DEFAULT_GROUP', '[\n    {\n        \"resource\": \"cloud-auth\",\n        \"count\": 500,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n\n	{\n        \"resource\": \"cloud-file\",\n        \"count\": 300,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n    {\n        \"resource\": \"cloud-pay\",\n        \"count\": 200,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"cloud-user\",\n        \"count\": 1000,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    }\n\n]\n', '8fc4db81cb05a5822a8395cfad2304d0', '2022-05-24 07:18:17', '2022-05-25 10:12:35', 'nacos', '127.0.0.1', '', '', '流量控制', 'null', 'null', 'json', 'null', '');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC, `datum_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC, `tag_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id` ASC, `tag_name` ASC, `tag_type` ASC) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint UNSIGNED NOT NULL,
  `nid` bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create` ASC) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified` ASC) USING BTREE,
  INDEX `idx_did`(`data_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 60 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (0, 1, 'application-dev', 'DEFAULT_GROUP', '', 'spring:\r\n  autoconfigure:\r\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\r\n  mvc:\r\n    pathmatch:\r\n      matching-strategy: ant_path_matcher\r\n\r\n# feign 配置\r\nfeign:\r\n  sentinel:\r\n    enabled: true\r\n  okhttp:\r\n    enabled: true\r\n  httpclient:\r\n    enabled: false\r\n  client:\r\n    config:\r\n      default:\r\n        connectTimeout: 10000\r\n        readTimeout: 10000\r\n  compression:\r\n    request:\r\n      enabled: true\r\n    response:\r\n      enabled: true\r\n\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \'*\'', 'f2f5da21b634b755c10eb513568e0742', '2022-05-06 17:06:10', '2022-05-06 09:06:11', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (0, 2, 'cloud-gateway-dev', 'DEFAULT_GROUP', '', '# spring配置\r\nspring:\r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n  cloud:\r\n    gateway:\r\n      discovery:\r\n        locator:\r\n          lowerCaseServiceId: true\r\n          enabled: true\r\n      routes:\r\n        # 认证中心\r\n        - id: cloud-auth\r\n          uri: lb://cloud-auth\r\n          predicates:\r\n            - Path=/auth/**\r\n          filters:\r\n            # 验证码处理\r\n            - CacheRequestFilter\r\n            - ValidateCodeFilter\r\n            - StripPrefix=1\r\n        # 文件服务\r\n        - id: cloud-file\r\n          uri: lb://cloud-file\r\n          predicates:\r\n            - Path=/file/**\r\n          filters:\r\n            - StripPrefix=1\r\n# 安全配置\r\nsecurity:\r\n  # 验证码\r\n  captcha:\r\n    enabled: true\r\n    type: math\r\n  # 防止XSS攻击\r\n  xss:\r\n    enabled: true\r\n    excludeUrls:\r\n      - /system/notice\r\n  # 不校验白名单\r\n  ignore:\r\n    whites:\r\n      - /auth/logout\r\n      - /auth/login\r\n      - /auth/register\r\n      - /*/v2/api-docs\r\n      - /csrf', '47cf94fd14e63ace9cb83ccb3ab0f8b7', '2022-05-06 17:06:59', '2022-05-06 09:07:00', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (0, 3, 'cloud-auth-dev', 'DEFAULT_GROUP', '', '# spring配置\r\nspring: \r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n  datasource: \r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n    username: aigaojianyun\r\n    password: Xka5201314\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.cloud.auth.domain\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# MyBatis-Plus配置\r\nmybatis-plus:\r\n  configuration:\r\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\r\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 认证中心接口文档\r\n  license: Powered By cloud\r\n  licenseUrl: https://cloud.vip', 'a8d4efea132cce5976d827d1343363e7', '2022-05-06 17:07:50', '2022-05-06 09:07:51', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (1, 4, 'application-dev.yml', 'DEFAULT_GROUP', '', 'spring:\r\n  autoconfigure:\r\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\r\n  mvc:\r\n    pathmatch:\r\n      matching-strategy: ant_path_matcher\r\n\r\n# feign 配置\r\nfeign:\r\n  sentinel:\r\n    enabled: true\r\n  okhttp:\r\n    enabled: true\r\n  httpclient:\r\n    enabled: false\r\n  client:\r\n    config:\r\n      default:\r\n        connectTimeout: 10000\r\n        readTimeout: 10000\r\n  compression:\r\n    request:\r\n      enabled: true\r\n    response:\r\n      enabled: true\r\n\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \'*\'', 'f2f5da21b634b755c10eb513568e0742', '2022-05-06 20:47:45', '2022-05-06 12:47:48', NULL, '127.0.0.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (2, 5, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\r\nspring:\r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n  cloud:\r\n    gateway:\r\n      discovery:\r\n        locator:\r\n          lowerCaseServiceId: true\r\n          enabled: true\r\n      routes:\r\n        # 认证中心\r\n        - id: cloud-auth\r\n          uri: lb://cloud-auth\r\n          predicates:\r\n            - Path=/auth/**\r\n          filters:\r\n            # 验证码处理\r\n            - CacheRequestFilter\r\n            - ValidateCodeFilter\r\n            - StripPrefix=1\r\n        # 文件服务\r\n        - id: cloud-file\r\n          uri: lb://cloud-file\r\n          predicates:\r\n            - Path=/file/**\r\n          filters:\r\n            - StripPrefix=1\r\n# 安全配置\r\nsecurity:\r\n  # 验证码\r\n  captcha:\r\n    enabled: true\r\n    type: math\r\n  # 防止XSS攻击\r\n  xss:\r\n    enabled: true\r\n    excludeUrls:\r\n      - /system/notice\r\n  # 不校验白名单\r\n  ignore:\r\n    whites:\r\n      - /auth/logout\r\n      - /auth/login\r\n      - /auth/register\r\n      - /*/v2/api-docs\r\n      - /csrf', '47cf94fd14e63ace9cb83ccb3ab0f8b7', '2022-05-06 20:47:45', '2022-05-06 12:47:48', NULL, '127.0.0.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (3, 6, 'cloud-auth-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\r\nspring: \r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n  datasource: \r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n    username: aigaojianyun\r\n    password: Xka5201314\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.cloud.auth.domain\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# MyBatis-Plus配置\r\nmybatis-plus:\r\n  configuration:\r\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\r\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 认证中心接口文档\r\n  license: Powered By cloud\r\n  licenseUrl: https://cloud.vip', 'a8d4efea132cce5976d827d1343363e7', '2022-05-06 20:47:45', '2022-05-06 12:47:48', NULL, '127.0.0.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (0, 7, 'application-dev.yml', 'DEFAULT_GROUP', '', 'spring:\r\n  autoconfigure:\r\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\r\n  mvc:\r\n    pathmatch:\r\n      matching-strategy: ant_path_matcher\r\n\r\n# feign 配置\r\nfeign:\r\n  sentinel:\r\n    enabled: true\r\n  okhttp:\r\n    enabled: true\r\n  httpclient:\r\n    enabled: false\r\n  client:\r\n    config:\r\n      default:\r\n        connectTimeout: 10000\r\n        readTimeout: 10000\r\n  compression:\r\n    request:\r\n      enabled: true\r\n    response:\r\n      enabled: true\r\n\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \'*\'', 'f2f5da21b634b755c10eb513568e0742', '2022-05-06 20:48:49', '2022-05-06 12:48:52', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (0, 8, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\r\nspring:\r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n  cloud:\r\n    gateway:\r\n      discovery:\r\n        locator:\r\n          lowerCaseServiceId: true\r\n          enabled: true\r\n      routes:\r\n        # 认证中心\r\n        - id: cloud-auth\r\n          uri: lb://cloud-auth\r\n          predicates:\r\n            - Path=/auth/**\r\n          filters:\r\n            # 验证码处理\r\n            - CacheRequestFilter\r\n            - ValidateCodeFilter\r\n            - StripPrefix=1\r\n        # 文件服务\r\n        - id: cloud-file\r\n          uri: lb://cloud-file\r\n          predicates:\r\n            - Path=/file/**\r\n          filters:\r\n            - StripPrefix=1\r\n# 安全配置\r\nsecurity:\r\n  # 验证码\r\n  captcha:\r\n    enabled: true\r\n    type: math\r\n  # 防止XSS攻击\r\n  xss:\r\n    enabled: true\r\n    excludeUrls:\r\n      - /system/notice\r\n  # 不校验白名单\r\n  ignore:\r\n    whites:\r\n      - /auth/logout\r\n      - /auth/login\r\n      - /auth/register\r\n      - /*/v2/api-docs\r\n      - /csrf', '47cf94fd14e63ace9cb83ccb3ab0f8b7', '2022-05-06 20:49:24', '2022-05-06 12:49:28', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (5, 9, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\r\nspring:\r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n  cloud:\r\n    gateway:\r\n      discovery:\r\n        locator:\r\n          lowerCaseServiceId: true\r\n          enabled: true\r\n      routes:\r\n        # 认证中心\r\n        - id: cloud-auth\r\n          uri: lb://cloud-auth\r\n          predicates:\r\n            - Path=/auth/**\r\n          filters:\r\n            # 验证码处理\r\n            - CacheRequestFilter\r\n            - ValidateCodeFilter\r\n            - StripPrefix=1\r\n        # 文件服务\r\n        - id: cloud-file\r\n          uri: lb://cloud-file\r\n          predicates:\r\n            - Path=/file/**\r\n          filters:\r\n            - StripPrefix=1\r\n# 安全配置\r\nsecurity:\r\n  # 验证码\r\n  captcha:\r\n    enabled: true\r\n    type: math\r\n  # 防止XSS攻击\r\n  xss:\r\n    enabled: true\r\n    excludeUrls:\r\n      - /system/notice\r\n  # 不校验白名单\r\n  ignore:\r\n    whites:\r\n      - /auth/logout\r\n      - /auth/login\r\n      - /auth/register\r\n      - /*/v2/api-docs\r\n      - /csrf', '47cf94fd14e63ace9cb83ccb3ab0f8b7', '2022-05-06 20:50:03', '2022-05-06 12:50:06', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 10, 'cloud-auth-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\r\nspring: \r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n  datasource: \r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n    username: aigaojianyun\r\n    password: Xka5201314\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.cloud.auth.domain\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# MyBatis-Plus配置\r\nmybatis-plus:\r\n  configuration:\r\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\r\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 认证中心接口文档\r\n  license: Powered By cloud\r\n  licenseUrl: https://cloud.vip', 'a8d4efea132cce5976d827d1343363e7', '2022-05-06 20:50:58', '2022-05-06 12:51:01', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (5, 11, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf', '72640bd95d2e3178a30fff06d1d14fdd', '2022-05-06 23:12:39', '2022-05-06 15:12:42', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (7, 12, 'cloud-auth-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\r\nspring: \r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n  datasource: \r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n    username: aigaojianyun\r\n    password: Xka5201314\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.cloud.auth.domain\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# MyBatis-Plus配置\r\nmybatis-plus:\r\n  configuration:\r\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\r\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 认证中心接口文档\r\n  license: Powered By cloud\r\n  licenseUrl: https://cloud.vip', 'a8d4efea132cce5976d827d1343363e7', '2022-05-07 00:50:16', '2022-05-06 16:50:19', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 13, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\r\nspring: \r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n  datasource: \r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n    username: aigaojianyun\r\n    password: Xka5201314\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.cloud.auth.domain\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# MyBatis-Plus配置\r\nmybatis-plus:\r\n  configuration:\r\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\r\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 认证中心接口文档\r\n  license: Powered By cloud\r\n  licenseUrl: https://cloud.vip', '223085d526f792c159d03d98ddfbef62', '2022-05-10 09:25:32', '2022-05-10 01:25:33', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (7, 14, 'cloud-auth-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: \n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: aigaojianyun\n    password: Xka5201314\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.cloud.auth.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# MyBatis-Plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title: 认证中心接口文档\n  license: Powered By cloud\n  licenseUrl: https://cloud.vip', '1e0316665ba387b71429717caee177ef', '2022-05-10 09:26:57', '2022-05-10 01:26:58', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (5, 15, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /cloud-auth/logout\n      - /cloud-auth/login\n      - /cloud-auth/register\n      - /*/v2/api-docs', '88ab1aa18fdf19062c7d3ecfc8a2ed2b', '2022-05-10 09:48:51', '2022-05-10 01:48:52', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (5, 16, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n        # 用户中心\n        - id: user-auth\n          uri: lb://user-auth\n          predicates:\n            - Path=/user/**    \n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /cloud-auth/logout\n      - /cloud-auth/login\n      - /cloud-auth/register\n      - /*/v2/api-docs', '9aa375fc4820c6c867e5238f00ea0a77', '2022-05-10 11:15:41', '2022-05-10 03:15:43', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 17, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\r\nspring: \r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n  datasource: \r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n    username: aigaojianyun\r\n    password: Xka5201314\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.cloud.auth.domain\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# MyBatis-Plus配置\r\nmybatis-plus:\r\n  configuration:\r\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\r\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 认证中心接口文档\r\n  license: Powered By cloud\r\n  licenseUrl: https://cloud.vip', '223085d526f792c159d03d98ddfbef62', '2022-05-10 11:52:33', '2022-05-10 03:52:34', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 18, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: \n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: aigaojianyun\n    password: Xka5201314\n\n# MyBatis-Plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title: \n  license: \n  licenseUrl: ', 'ab1389ff58922e3ab3887c501c1b65db', '2022-05-10 14:40:33', '2022-05-10 06:40:34', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 19, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: \n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: aigaojianyun\n    password: Xka5201314\n\n# MyBatis-Plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title: \n  license: \n  licenseUrl: ', 'ab1389ff58922e3ab3887c501c1b65db', '2022-05-10 14:41:57', '2022-05-10 06:41:59', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (5, 20, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n        # 用户中心\n        - id: cloud-user\n          uri: lb://cloud-user\n          predicates:\n            - Path=/user/**    \n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /cloud-auth/logout\n      - /cloud-auth/login\n      - /cloud-auth/register\n      - /*/v2/api-docs', '1eb7747aece020835698cef9a959d981', '2022-05-10 15:35:17', '2022-05-10 07:35:18', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (5, 21, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n        # 用户中心\n        - id: cloud-user\n          uri: lb://cloud-user\n          predicates:\n            - Path=/user/**    \n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /cloud-auth/logout\n      - /cloud-auth/login\n      - /cloud-auth/register\n      - /cloud-user/info/{username}\n      - /*/v2/api-docs', '515eff76194ec45bc2f4316896175b1d', '2022-05-10 15:38:57', '2022-05-10 07:38:58', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (5, 22, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n        # 用户中心\n        - id: cloud-user\n          uri: lb://cloud-user\n          predicates:\n            - Path=/user/**    \n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /cloud-auth/logout\n      - /cloud-auth/login\n      - /cloud-auth/register\n      - /cloud-user/info/\n      - /*/v2/api-docs', 'fe93cf8e1bc09bfb1e44429d23335d08', '2022-05-10 15:40:28', '2022-05-10 07:40:29', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 23, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: \n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: aigaojianyun\n    password: Xka5201314\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.cloud.**.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# MyBatis-Plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title: \n  license: \n  licenseUrl: ', 'c943c4f5e570f560b487a75bf978c8ba', '2022-05-10 17:30:41', '2022-05-10 09:30:43', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 24, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: \n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: aigaojianyun\n    password: Xka5201314\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.cloud.**.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# MyBatis-Plus配置\nmybatis-plus:\n    configuration:\n      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n    mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title: \n  license: \n  licenseUrl: ', '2b5ba35d0b3eb6652d27561c26fa3a9c', '2022-05-10 17:32:46', '2022-05-10 09:32:47', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 25, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: \n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: aigaojianyun\n    password: Xka5201314\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.cloud.auth.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# MyBatis-Plus配置\nmybatis-plus:\n    # 搜索指定包别名\n    configuration:\n        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件    \n    mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title: \n  license: \n  licenseUrl: ', 'ae4a21be3e84cd6f86e25407cf836f3b', '2022-05-10 17:32:53', '2022-05-10 09:32:55', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 26, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: \n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: aigaojianyun\n    password: Xka5201314\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.cloud.auth.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# MyBatis-Plus配置\nmybatis-plus:\n    # 搜索指定包别名\n    configuration:\n        log-impl: org.apache.ibatis.logging.stdout.   StdOutImpl\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件    \n    mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title: \n  license: \n  licenseUrl: ', 'a543f3daee03ddd85b5503a20effbca5', '2022-05-10 17:33:29', '2022-05-10 09:33:30', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (7, 27, 'cloud-auth-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: \n', 'a3a55416f02b8f38a8964851d778c73d', '2022-05-11 12:39:59', '2022-05-11 04:39:58', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (7, 28, 'cloud-auth-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: \n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: aigaojianyun\n    password: Xka5201314\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.cloud.auth.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# MyBatis-Plus配置\nmybatis-plus:\n    # 搜索指定包别名\n    configuration:\n        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件    \n    mapper-locations: classpath*:mapper/**/*Mapper.xml', '30207d174da0e858e666e779565418cb', '2022-05-11 12:43:42', '2022-05-11 04:43:41', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (5, 29, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n        # 用户中心\n        - id: cloud-user\n          uri: lb://cloud-user\n          predicates:\n            - Path=/user/**    \n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /cloud-auth/logout\n      - /cloud-auth/login\n      - /cloud-auth/register\n      - /cloud-user/info\n      - /*/v2/api-docs', '06469987f4a837fa13fff6a71ffffbd6', '2022-05-11 14:44:02', '2022-05-11 06:44:01', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (5, 30, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n        # 用户中心\n        - id: cloud-user\n          uri: lb://cloud-user\n          predicates:\n            - Path=/user/**    \n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /cloud-auth/logout\n      - /cloud-auth/login\n      - /cloud-auth/register\n      - /user/info/100000\n      - /*/v2/api-docs', '5e5bd60fa5640bd8bc4965f6cff9ef96', '2022-05-11 14:46:00', '2022-05-11 06:46:00', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 31, 'cloud-file-dev', 'DEFAULT_GROUP', '', '# FastDFS配置\r\nfdfs:\r\n  domain: http://192.168.2.11\r\n  soTimeout: 3000\r\n  connectTimeout: 2000\r\n  trackerList: 192.168.2.11:22122', '4ee25d0bfbecf7d8c82af83feabb11ff', '2022-05-12 22:18:01', '2022-05-12 14:18:04', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (5, 32, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n        # 用户中心\n        - id: cloud-user\n          uri: lb://cloud-user\n          predicates:\n            - Path=/user/**    \n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /cloud-auth/logout\n      - /cloud-auth/login\n      - /cloud-auth/register\n      - /cloud-user/user/info/100000\n      - /*/v2/api-docs', 'be37d86a9d0d9c2a4ad31f8cd6c51119', '2022-05-12 22:22:50', '2022-05-12 14:22:53', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (28, 33, 'cloud-file-dev', 'DEFAULT_GROUP', '', '# FastDFS配置\r\nfdfs:\r\n  domain: http://192.168.2.11\r\n  soTimeout: 3000\r\n  connectTimeout: 2000\r\n  trackerList: 192.168.2.11:22122', '4ee25d0bfbecf7d8c82af83feabb11ff', '2022-05-12 22:27:09', '2022-05-12 14:27:12', NULL, '127.0.0.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (0, 34, 'cloud-file-dev.yml', 'DEFAULT_GROUP', '', '# FastDFS配置\r\nfdfs:\r\n  domain: http://192.168.2.11\r\n  soTimeout: 3000\r\n  connectTimeout: 2000\r\n  trackerList: 192.168.2.11:22122', '4ee25d0bfbecf7d8c82af83feabb11ff', '2022-05-12 22:27:55', '2022-05-12 14:27:58', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (10, 35, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: \n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: aigaojianyun\n    password: Xka5201314\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.cloud.auth.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# MyBatis-Plus配置\nmybatis-plus:\n    # 搜索指定包别名\n    configuration:\n        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件    \n    mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title: \n  license: \n  licenseUrl: ', 'ae4a21be3e84cd6f86e25407cf836f3b', '2022-05-13 16:49:47', '2022-05-13 08:49:47', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 36, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  datasource:\n    # 主库数据源\n    master:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n      username: aigaojianyun\n      password: Xka5201314\n    # 从库数据源\n    # slave:\n      # username: \n      # password: \n      # url: \n      # driver-class-name: \n      #seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# mybatis配置\nmybatis:\n  # 搜索指定包别名\n  typeAliasesPackage: com.cloud.auth.domain\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/**/*.xml\n\n# MyBatis-Plus配置\nmybatis-plus:\n  # 搜索指定包别名\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件    \n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title:\n  license:\n  licenseUrl: ', '7a12e6a9144be8dbf0903f36d9f88060', '2022-05-13 17:02:55', '2022-05-13 09:02:56', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 37, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  datasource:\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: aigaojianyun\n            password: Xka5201314\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n            #seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# mybatis配置\nmybatis:\n  # 搜索指定包别名\n  typeAliasesPackage: com.cloud.auth.domain\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/**/*.xml\n\n# MyBatis-Plus配置\nmybatis-plus:\n  # 搜索指定包别名\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title:\n  license:\n  licenseUrl:', 'a9797c194f0a9e91784d0b0125a29fe3', '2022-05-13 17:18:56', '2022-05-13 09:18:57', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 38, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername:\n        loginPassword:\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: aigaojianyun\n            password: Xka5201314\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n            #seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# mybatis配置\nmybatis:\n  # 搜索指定包别名\n  typeAliasesPackage: com.cloud.auth.domain\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/**/*.xml\n\n# MyBatis-Plus配置\nmybatis-plus:\n  # 搜索指定包别名\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title:\n  license:\n  licenseUrl:', '820922b60b91f8ce764984c69780b6ed', '2022-05-13 17:50:40', '2022-05-13 09:50:41', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 39, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername:\n        loginPassword:\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: aigaojianyun\n            password: Xka5201314\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n            #seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# MyBatis-Plus配置\nmybatis-plus:\n  # 搜索指定包别名\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title:\n  license:\n  licenseUrl:', 'c7c18a9a6428ee79916179c1bed3248e', '2022-05-15 13:56:22', '2022-05-15 05:56:22', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 40, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  datasource:\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: aigaojianyun\n            password: Xka5201314\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n            #seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# MyBatis-Plus配置\nmybatis-plus:\n  # 搜索指定包别名\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title:\n  license:\n  licenseUrl:', 'f13f333b55be972d1b6edf740a815f6c', '2022-05-15 15:09:51', '2022-05-14 23:09:50', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 41, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername:\n        loginPassword:\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: aigaojianyun\n            password: Xka5201314\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n            #seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# MyBatis-Plus配置\nmybatis-plus:\n  # 搜索指定包别名\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title:\n  license:\n  licenseUrl:', 'c7c18a9a6428ee79916179c1bed3248e', '2022-05-15 15:41:46', '2022-05-14 23:41:46', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 42, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername:\n        loginPassword:\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: aigaojianyun\n            password: Xka5201314\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n            #seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      ruoyi-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      namespace:\n\n# MyBatis-Plus配置\nmybatis-plus:\n  # 搜索指定包别名\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title:\n  license:\n  licenseUrl:', 'cf2d1356e68bc03b15ab4a19e1841b85', '2022-05-16 21:39:58', '2022-05-16 13:39:59', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 43, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername:\n        loginPassword:\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: aigaojianyun\n            password: Xka5201314\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n            #seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      ruoyi-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      namespace:\n\n# MyBatis-Plus配置\nmybatis-plus:\n  # 搜索指定包别名\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapper-locations: classpath*:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title:\n  license:\n  licenseUrl:', '7047deecb05df2a10d12336b3a52a33c', '2022-05-16 21:41:35', '2022-05-16 13:41:37', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 44, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername:\n        loginPassword:\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: aigaojianyun\n            password: Xka5201314\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n            #seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      ruoyi-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      namespace:\n\n# MyBatis-Plus配置\nmybatis-plus:\n  # 搜索指定包别名\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title:\n  license:\n  licenseUrl:', 'cf2d1356e68bc03b15ab4a19e1841b85', '2022-05-23 11:38:30', '2022-05-23 03:38:30', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (30, 45, 'cloud-file-dev.yml', 'DEFAULT_GROUP', '', '# FastDFS配置\r\nfdfs:\r\n  domain: http://192.168.2.11\r\n  soTimeout: 3000\r\n  connectTimeout: 2000\r\n  trackerList: 192.168.2.11:22122', '4ee25d0bfbecf7d8c82af83feabb11ff', '2022-05-23 15:38:08', '2022-05-23 07:38:08', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (30, 46, 'cloud-file-dev.yml', 'DEFAULT_GROUP', '', '# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/ai-cloud/uploadPath\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://192.168.2.11\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 192.168.2.11:22122\n\n# Minio配置\nminio:\n  url: http://8.129.231.12:9000\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test  ', 'fe0017ea54917eff31dd89de302dd7f6', '2022-05-23 15:38:34', '2022-05-23 07:38:35', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (30, 47, 'cloud-file-dev.yml', 'DEFAULT_GROUP', '', '# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: E:/ai-cloud/uploadPath\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://192.168.2.11\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 192.168.2.11:22122\n\n# Minio配置\nminio:\n  url: http://8.129.231.12:9000\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test  ', '785c191776a6b3b91a0d491c210b736d', '2022-05-23 15:39:18', '2022-05-23 07:39:18', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (30, 48, 'cloud-file-dev.yml', 'DEFAULT_GROUP', '', '# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9400\n    path: E:/ai-cloud/uploadPath\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://192.168.2.11\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 192.168.2.11:22122\n\n# Minio配置\nminio:\n  url: http://8.129.231.12:9000\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test  ', '5ee9766eddbd015866f2d26e890760d6', '2022-05-23 17:12:25', '2022-05-23 09:12:25', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (30, 49, 'cloud-file-dev.yml', 'DEFAULT_GROUP', '', '# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9400\n    path: E:/ai-cloud/uploadPath\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://192.168.2.11\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 192.168.2.11:22122\n\n# Minio配置\nminio:\n  url: http://192.168.2.11:9000\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test  ', '3649070693ac7280d5af12abbd9658e6', '2022-05-23 17:12:57', '2022-05-23 09:12:57', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (5, 50, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n        # 用户中心\n        - id: cloud-user\n          uri: lb://cloud-user\n          predicates:\n            - Path=/user/**    \n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /cloud-auth/logout\n      - /cloud-auth/login\n      - /cloud-auth/register\n      - /cloud-file/upload\n      - /cloud-user/user/info/100000\n      - /*/v2/api-docs', '6ab46886d9cc5d46f325aefccb874363', '2022-05-23 17:28:30', '2022-05-23 09:28:31', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (5, 51, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n        # 用户中心\n        - id: cloud-user\n          uri: lb://cloud-user\n          predicates:\n            - Path=/user/**    \n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n\n  # 不校验白名单\n  ignore:\n    whites:\n      - /cloud-auth/logout\n      - /cloud-auth/login\n      - /cloud-auth/register\n      - /cloud-file/upload\n      - /*/v2/api-docs', 'aa744aa44acb2d0649e9d35da81893df', '2022-05-23 17:33:50', '2022-05-23 09:33:50', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (30, 52, 'cloud-file-dev.yml', 'DEFAULT_GROUP', '', '# 本地文件上传    \nfile:\n  domain: http://127.0.0.1:9400\n  path: E:/ai-cloud/uploadPath\n  prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://192.168.2.11\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 192.168.2.11:22122\n\n# Minio配置\nminio:\n  url: http://192.168.2.11:9000\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test  ', '2304ac543ee72946aa9dd71f2364ac79', '2022-05-24 09:01:25', '2022-05-24 01:01:27', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 53, 'sentinel-cloud-gateway', 'DEFAULT_GROUP', '', '[\r\n    {\r\n        \"resource\": \"cloud-auth\",\r\n        \"count\": 500,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"cloud-user\",\r\n        \"count\": 1000,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"cloud-pay\",\r\n        \"count\": 200,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"cloud-file\",\r\n        \"count\": 300,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    }\r\n]', '33b840877ac5c99d8892d53c1daccaa0', '2022-05-24 15:18:15', '2022-05-24 07:18:17', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (4, 54, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername:\n        loginPassword:\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: aigaojianyun\n            password: Xka5201314\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n            #seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      ruoyi-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      namespace:\n\n# MyBatis-Plus配置\nmybatis-plus:\n  # 搜索指定包别名\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title:\n  license:\n  licenseUrl:', 'fd0bc56084be0e060ac5dbaebdb75791', '2022-05-24 15:39:51', '2022-05-24 07:39:52', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (2, 55, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 用户中心\n        - id: cloud-user\n          uri: lb://cloud-user\n          predicates:\n            - Path=/user/**    \n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /cloud-auth/login\n  # 不校验白名单\n  ignore:\n    whites:\n      - /cloud-auth/logout\n      - /cloud-auth/login\n      - /cloud-auth/register\n      - /cloud-file/upload\n      - /*/v2/api-docs', 'f1d966147ddf0235a15300e93c679f79', '2022-05-24 15:43:08', '2022-05-24 07:43:09', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (2, 56, 'cloud-gateway-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: cloud-auth\n          uri: lb://cloud-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 用户中心\n        - id: cloud-user\n          uri: lb://cloud-user\n          predicates:\n            - Path=/user/**    \n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: cloud-file\n          uri: lb://cloud-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /cloud-auth/login\n  # 不校验白名单\n  ignore:\n    whites:\n      - /cloud-auth/logout\n      - /cloud-auth/login\n      - /cloud-auth/register\n      - /cloud-file/upload\n      - /*/v2/api-docs', 'f1d966147ddf0235a15300e93c679f79', '2022-05-25 00:41:53', '2022-05-24 16:41:55', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (3, 57, 'cloud-auth-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: \n', 'a3a55416f02b8f38a8964851d778c73d', '2022-05-25 00:42:08', '2022-05-24 16:42:10', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (5, 58, 'cloud-file-dev.yml', 'DEFAULT_GROUP', '', '# 本地文件上传    \nfile:\n  domain: http://127.0.0.1:8400\n  path: E:/ai-cloud/uploadPath\n  prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://192.168.2.11\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 192.168.2.11:22122\n\n# Minio配置\nminio:\n  url: http://192.168.2.11:9000\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test  ', 'f46dcf1540a8dc09a6b83e0b59137021', '2022-05-25 00:42:50', '2022-05-24 16:42:52', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (10, 59, 'sentinel-cloud-gateway', 'DEFAULT_GROUP', '', '[\r\n    {\r\n        \"resource\": \"cloud-auth\",\r\n        \"count\": 500,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"cloud-user\",\r\n        \"count\": 1000,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"cloud-pay\",\r\n        \"count\": 200,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"cloud-file\",\r\n        \"count\": 300,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    }\r\n]', '33b840877ac5c99d8892d53c1daccaa0', '2022-05-25 18:12:34', '2022-05-25 10:12:35', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (4, 60, 'cloud-user-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername:\n        loginPassword:\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://rm-bp15521us1y063fs28o.mysql.rds.aliyuncs.com:3306/ai-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: aigaojianyun\n            password: Xka5201314\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n            #seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      cloud-user-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      namespace:\n\n# MyBatis-Plus配置\nmybatis-plus:\n  # 搜索指定包别名\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapper-locations: classpath*:mapper/**/*Mapper.xml\n\n# swagger配置\nswagger:\n  title:\n  license:\n  licenseUrl:', '8b761e336946b1885e3385798514d53f', '2022-05-25 22:53:16', '2022-05-25 14:53:17', 'nacos', '127.0.0.1', 'U', '', '');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `resource` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role` ASC, `resource` ASC, `action` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of permissions
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  UNIQUE INDEX `idx_user_role`(`username` ASC, `role` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp` ASC, `tenant_id` ASC) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
